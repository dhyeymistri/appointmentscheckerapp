{"version":3,"sources":["components/AddAppointment.js","components/Search.js","components/AppointmentInfo.js","App.js","index.js"],"names":["AddAppointment","onSendAppointment","lastId","clearData","ownerName","petName","aptDate","aptTime","aptNotes","useState","toggle","setToggle","formData","setFormData","onClick","className","htmlFor","type","name","id","onChange","event","target","value","rows","placeholder","appointmentInfo","Drop","sort","onSortChange","order","onOrderChange","role","Search","query","onQueryChange","drop","setDrop","mySort","myOrder","AppointmentInfo","appointment","onDeleteAppointment","App","appointmentList","setAppointmentList","setQuery","setSort","setOrder","filteredAppointments","filter","item","toLowerCase","includes","a","b","orderr","fetchData","useCallback","fetch","then","response","json","data","useEffect","myAppointment","reduce","max","Number","myQuery","map","appointmentId","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.3b9444b3.chunk.js","sourcesContent":["import { BiCalendarPlus } from \"react-icons/bi\";\r\nimport { useState } from \"react\";\r\n\r\nconst AddAppointment = ({onSendAppointment, lastId}) => {\r\n    const clearData = {\r\n        ownerName: '',\r\n        petName: '',\r\n        aptDate: '',\r\n        aptTime: '',\r\n        aptNotes: ''\r\n    }\r\n    let [toggle, setToggle] = useState(false)\r\n    let [formData, setFormData] = useState(clearData)\r\n\r\n    function formDataPublish(){\r\n        const appointmentInfo = {\r\n            id: lastId + 1,\r\n            ownerName: formData.ownerName,\r\n            petName: formData.petName,\r\n            aptDate: formData.aptDate + '' + formData.aptTime,\r\n            aptNotes: formData.aptNotes\r\n        }\r\n        onSendAppointment(appointmentInfo);\r\n        setFormData(clearData);\r\n        setToggle(!toggle);\r\n    }\r\n    return (\r\n        <div>\r\n            <button onClick={() => { setToggle(!toggle)}} className={`bg-blue-600 text-white px-2 py-3 w-full text-left ${toggle ? `rounded-t-md` : `rounded-md`}`}>\r\n                <div><BiCalendarPlus className=\"inline-block align-text-top\" />  Add Appointment</div>\r\n            </button>\r\n            {\r\n                toggle && <div className=\"border-r-2 border-b-2 border-l-2 border-light-blue-500 rounded-b-md pl-4 pr-4 pb-4\">\r\n                <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\r\n                    <label htmlFor=\"ownerName\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\r\n                        Owner Name\r\n                    </label>\r\n                    <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\r\n                        <input type=\"text\" name=\"ownerName\" id=\"ownerName\"\r\n                        onChange={(event)=>{setFormData({...formData, ownerName: event.target.value})}}\r\n                            value = {formData.ownerName}\r\n                            className=\"max-w-lg block w-full shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md\" />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\r\n                    <label htmlFor=\"petName\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\r\n                        Pet Name\r\n                    </label>\r\n                    <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\r\n                        <input type=\"text\" name=\"petName\" id=\"petName\"\r\n                            onChange={(event)=>{setFormData({...formData, petName: event.target.value})}}\r\n                            value = {formData.petName}\r\n                            className=\"max-w-lg block w-full shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md\" />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\r\n                    <label htmlFor=\"aptDate\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\r\n                        Appointment Date\r\n                    </label>\r\n                    <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\r\n                        <input type=\"date\" name=\"aptDate\" id=\"aptDate\"\r\n                            onChange={(event)=>{setFormData({...formData, aptDate: event.target.value})}}\r\n                            value = {formData.aptDate}\r\n                            className=\"max-w-lg block w-full shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md\" />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\r\n                    <label htmlFor=\"aptTime\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\r\n                        Appointment Time\r\n                    </label>\r\n                    <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\r\n                        <input type=\"time\" name=\"aptTime\" id=\"aptTime\"\r\n                            onChange={(event)=>{setFormData({...formData, aptTime: event.target.value})}}\r\n                            value = {formData.aptTime}\r\n                            className=\"max-w-lg block w-full shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md\" />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\r\n                    <label htmlFor=\"aptNotes\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\r\n                        Appointment Notes\r\n                    </label>\r\n                    <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\r\n                        <textarea id=\"aptNotes\" name=\"aptNotes\" rows=\"3\"\r\n                            onChange={(event)=>{setFormData({...formData, aptNotes: event.target.value})}}\r\n                            value = {formData.aptNotes}\r\n                            className=\"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 mt-1 block w-full sm:text-sm border-gray-300 rounded-md\" placeholder=\"Detailed comments about the condition\"></textarea>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"pt-5\">\r\n                    <div className=\"flex justify-end\">\r\n                        <button onClick={formDataPublish} type=\"submit\" className=\"ml-3 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-400 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-400\">\r\n                            Submit\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddAppointment;","import { BiSearch, BiCaretDown, BiCheck } from \"react-icons/bi\"\r\nimport { useState } from \"react\"\r\n\r\nconst Drop = ({sort, onSortChange, order, onOrderChange}) => {\r\n    return (\r\n        <div className=\"origin-top-right absolute right-0 mt-2 w-56\r\n      rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5\">\r\n            <div className=\"py-1\" role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"options-menu\">\r\n                <div onClick={()=> onSortChange('petName')}\r\n                    className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex justify-between cursor-pointer\"\r\n                    role=\"menuitem\">Pet Name {(sort === 'petName') && <BiCheck />}</div>\r\n                <div onClick={()=> onSortChange('ownerName')}\r\n                    className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex justify-between cursor-pointer\"\r\n                    role=\"menuitem\">Owner Name  {(sort === 'ownerName') && <BiCheck />}</div>\r\n                <div onClick={()=> onSortChange('aptDate')}\r\n                    className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex justify-between cursor-pointer\"\r\n                    role=\"menuitem\">Date {(sort === 'aptDate') && <BiCheck />}</div>\r\n                <div onClick={()=> onOrderChange('asc')}\r\n                    className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex justify-between cursor-pointer border-gray-1 border-t-2\"\r\n                    role=\"menuitem\">Ascending {(order === 'asc') && <BiCheck />}</div>\r\n                <div onClick={()=> onOrderChange('desc')}\r\n                    className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex justify-between cursor-pointer\"\r\n                    role=\"menuitem\">Descending {(order === 'desc') && <BiCheck />}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Search = ({query, onQueryChange, order, onOrderChange, sort, onSortChange}) => {\r\n    const [drop, setDrop] = useState(false)\r\n    return (\r\n        <div className=\"py-5\">\r\n            <div className=\"mt-1 relative rounded-md shadow-sm\">\r\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                    <BiSearch />\r\n                    <label htmlFor=\"query\" className=\"sr-only\" />\r\n                </div>\r\n                <input type=\"text\" name=\"query\" id=\"query\" value={query}\r\n                    onChange={(event)=>{onQueryChange(event.target.value)}}\r\n                    className=\"pl-8 rounded-md focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300\" placeholder=\"Search\" />\r\n                <div className=\"absolute inset-y-0 right-0 flex items-center\">\r\n                    <div>\r\n                        <button onClick={()=>{setDrop(!drop)}} type=\"button\"\r\n                            className=\"justify-center px-4 py-2 bg-blue-400 border-2 border-blue-400 text-sm text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 flex items-center\" id=\"options-menu\" aria-haspopup=\"true\" aria-expanded=\"true\">\r\n                            Sort By <BiCaretDown className=\"ml-2\" />\r\n                        </button>\r\n                        {drop && \r\n                        <Drop \r\n                            sort = {sort}\r\n                            onSortChange = {mySort => onSortChange(mySort)}\r\n                            order = {order}\r\n                            onOrderChange = {myOrder => onOrderChange(myOrder)}\r\n                        />}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;","import { BiTrash } from \"react-icons/bi\"\r\n\r\nconst AppointmentInfo = ({appointment, onDeleteAppointment}) => {\r\n    return(\r\n        <li className=\"px-3 py-3 flex items-start\">\r\n              <button onClick={()=> onDeleteAppointment(appointment.id)} type=\"button\"\r\n                className=\"p-1.5 mr-1.5 mt-1 rounded text-white bg-red-500 hover:bg-yellow-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\">\r\n                <BiTrash /></button>\r\n              <div className=\"flex-grow\">\r\n                <div className=\"flex items-center\">\r\n                  <span className=\"flex-none font-medium text-2xl text-blue-500\">{appointment.petName}</span>\r\n                  <span className=\"flex-grow text-right\">{appointment.aptDate}</span>\r\n                </div>\r\n                <div><b className=\"font-bold text-blue-500\">Owner:</b> {appointment.ownerName}</div>\r\n                <div className=\"leading-tight\">{appointment.aptNotes}</div>\r\n              </div>\r\n            </li>\r\n    )\r\n}\r\n\r\nexport default AppointmentInfo","import React from 'react'\nimport { useState, useEffect, useCallback } from 'react';\nimport { BiCalendar} from 'react-icons/bi'\nimport AddAppointment from './components/AddAppointment';\nimport Search from './components/Search'\nimport AppointmentInfo from './components/AppointmentInfo';\n\nfunction App() {\n  let [appointmentList, setAppointmentList] = useState([]);\n  let [query, setQuery] = useState(\"\");\n  let [sort, setSort] = useState(\"petName\");\n  let [order, setOrder] = useState(\"asc\");\n\n  const filteredAppointments = appointmentList.filter(\n    item => {\n      return(\n        item.petName.toLowerCase().includes(query.toLowerCase()) ||\n        item.ownerName.toLowerCase().includes(query.toLowerCase()) ||\n        item.aptNotes.toLowerCase().includes(query.toLowerCase())\n      )\n    }\n  ).sort((a,b) => {\n    let orderr = (order==='asc') ? 1: -1;\n    return (\n      a[sort].toLowerCase() < b[sort].toLowerCase()\n      ? -1 *orderr : 1* orderr\n    )\n  })\n\n  const fetchData = useCallback(()=>{\n    fetch('./data.json')\n      .then(response=> response.json())\n      .then(data=>{\n        setAppointmentList(data)\n      });\n  }, [])\n\n  useEffect(()=>{\n    fetchData()\n  }, [fetchData])\n\n  return (\n    <div className=\"App container mx-auto mt-3 font-thin\">\n      <h1 className='text-5xl mb-3'><BiCalendar className=\"inline-block text-red-400 align-top\" />Your Appointments</h1>\n\n      <AddAppointment \n        onSendAppointment = {myAppointment => setAppointmentList([...appointmentList, myAppointment])}\n        lastId = {appointmentList.reduce((max, item) => Number(item.id) > max ? Number(item.id) : max, 0)}\n      />\n\n      <Search query={query} \n        onQueryChange={myQuery=>setQuery(myQuery)}\n        order  = {order}\n        onOrderChange = {mySort=>setOrder(mySort)}\n        sort = {sort}\n        onSortChange = {mySort=>setSort(mySort)}\n      />\n\n    \n      <ul className='divide-y divide-gray-200'>\n      {filteredAppointments\n          .map(appointment => (\n            <AppointmentInfo \n            key = {appointment.id} \n            appointment = {appointment}\n            onDeleteAppointment = {\n              appointmentId => setAppointmentList(appointmentList.filter(appointment=>appointment.id!==appointmentId))\n            }\n            />\n          ))\n        }\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n \nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);"],"sourceRoot":""}